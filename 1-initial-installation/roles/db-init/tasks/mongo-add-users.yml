---

- name: check if admin user exists
  shell: mongo -u "{{ mongo_admin }}" -p "{{ mongo_admin_password }}" --authenticationDatabase admin --quiet --eval "db.getUsers()" admin | grep -om1 "{{ mongo_admin }}"
  ignore_errors: yes
  register: admin
  
- name: check if db read-only user exists
  shell: mongo -u "{{ mongo_admin }}" -p "{{ mongo_admin_password }}" --authenticationDatabase admin --quiet --eval "db.getUsers()" "{{ db_name }}" | grep -om1 "{{ mongo_user }}"
  ignore_errors: yes
  register: readuser
  
- name: check if db write user exists
  shell: mongo -u "{{ mongo_admin }}" -p "{{ mongo_admin_password }}" --authenticationDatabase admin --quiet --eval "db.getUsers()" "{{ db_name }}" | grep -om1 "{{ mongo_write_user }}"
  ignore_errors: yes
  register: writeuser

- name: add admin user
  mongodb_user:
    database: admin
    name: "{{ mongo_admin }}"
    password: "{{ mongo_admin_password }}"
    roles: "root"
  when: admin.stdout == ""
  
- name: add ECSO-DB read-only user
  mongodb_user:
    database: "{{ db_name }}"
    name: "{{ mongo_user }}"
    password: "{{ mongo_user_password }}"
    roles: "read"
    login_user: "{{ mongo_admin }}"
    login_password: "{{ mongo_admin_password }}"
  when: readuser.stdout == ""
  
- name: add ECSO-DB write user
  mongodb_user:
    database: "{{ db_name }}"
    name: "{{ mongo_write_user }}"
    password: "{{ mongo_write_user_password }}"
    roles: "readWrite"
    login_user: "{{ mongo_admin }}"
    login_password: "{{ mongo_admin_password }}"
  when: writeuser.stdout == ""
